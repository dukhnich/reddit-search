{"version":3,"sources":["InputText.js","InputNumber.js","SearchForm.js","Reddit.js","ResultsList.js","Spinner.js","Pagination.js","SearchReddit.js","FeedItem.js","Feed.js","App.js","serviceWorker.js","index.js"],"names":["InputText","props","className","additionalClass","label","onChange","e","text","target","value","name","type","placeholder","aria-label","aria-describedby","InputRange","min","max","step","SearchForm","useState","initialValue","data","setData","prev","current","onSubmit","a","preventDefault","submitHandler","category","InputNumber","limit","Reddit","thumbnail","created","num_comments","author","score","title","permalink","history","useHistory","src","onClick","push","Date","toUTCString","ResultsList","reddits","map","reddit","key","id","Spinner","role","Pagination","children","subreddit","dist","before","after","console","log","changePage","event","paginationHandler","href","innerText","count","fetchReddit","request","fetch","response","json","TextOrSpinner","initialData","SearchReddit","React","setResponse","error","setError","setCount","search","message","resp","loadResults","goToAnotherPage","useEffect","Object","keys","length","FeedItem","body","fetchFeed","url","CommentsList","Array","isArray","comments","feed","Feed","useRouteMatch","getFeed","item","index","NotFound","App","to","exact","path","from","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.97b6da4e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst InputText = (props) => {\r\n\r\n    const onChange = (text) => {\r\n        props.onChange(text, props.name);\r\n    };\r\n\r\n    return (\r\n        <div className={\"input-group \" + props.additionalClass}>\r\n            <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\">{props.label}</span>\r\n            </div>\r\n            <input\r\n                onChange={(e) => onChange(e.target.value)}\r\n                type=\"text\"\r\n                value={props.value}\r\n                className=\"form-control\"\r\n                placeholder={props.label}\r\n                aria-label={props.label}\r\n                aria-describedby=\"basic-addon1\" />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default InputText","import React from \"react\";\r\n\r\nconst InputRange = (props) => {\r\n    // const [value, setValue] = useState(props.defaultValue);\r\n\r\n    const onChange = (text) => {\r\n        // if (text !== props.defaultValue)        {\r\n            props.onChange(text, props.name);\r\n        // }\r\n        // setValue(() => text);\r\n    };\r\n\r\n    return (\r\n        <div className={\"input-group \" + props.additionalClass}>\r\n            <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\">{props.label}</span>\r\n            </div>\r\n            <input\r\n                onChange={(e) => onChange(e.target.value)}\r\n                value={props.value}\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                placeholder={props.label}\r\n                min = {props.min}\r\n                max = {props.max}\r\n                step={props.step}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default InputRange","import React, {useEffect, useState} from \"react\";\r\nimport InputText from  \"./InputText\";\r\nimport InputNumber from \"./InputNumber\";\r\n\r\n\r\nconst SearchForm = (props) => {\r\n    const [data, setData] = useState(props.initialValue);\r\n\r\n    const onChange = (value, name) => {\r\n         setData(prev => {\r\n            const current = {...prev};\r\n            current[name] = value;\r\n            return current\r\n        })\r\n    };\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        await props.submitHandler(data);\r\n    };\r\n\r\n    return <form onSubmit={onSubmit} className=\"form-inline\">\r\n        <InputText\r\n            additionalClass = \"m-3\"\r\n            value={data.category}\r\n            name=\"category\"\r\n            label = \"Category\"\r\n            onChange={onChange}\r\n        />\r\n        <InputNumber\r\n            additionalClass = \"m-3\"\r\n            value={data.limit}\r\n            min = {1}\r\n            max={100}\r\n            step = {1}\r\n            name=\"limit\"\r\n            label = \"Limit\"\r\n            onChange={onChange}\r\n        />\r\n        <button type={\"submit\"}\r\n                className={\"btn flex-shrink-0 ml-3 btn-primary\"}>\r\n            Search\r\n        </button>\r\n    </form>\r\n};\r\n\r\nexport default SearchForm","import React from \"react\";\r\nimport {useHistory} from \"react-router-dom\"\r\n\r\n\r\nconst Reddit = (props) => {\r\n    const {thumbnail, created, num_comments, author, score, title, permalink} = props.data;\r\n    let history = useHistory();\r\n    function handleClick() {\r\n        history.push(`${permalink}`);\r\n    }\r\n    return (\r\n        <div className={\"card my-3\"}>\r\n            <div className=\"card-header\">\r\n                {thumbnail && thumbnail !== \"self\" &&\r\n                <img\r\n                    className={\"img-thumbnail flex-shrink-0 mr-3\"}\r\n                    src ={thumbnail}\r\n                />}\r\n                {author}\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{title}</h5>\r\n                <button onClick={handleClick} className={\"btn btn-primary\"}>\r\n                    Feed page\r\n                </button>\r\n            </div>\r\n            <div className=\"card-footer\">\r\n                <small className={\"text-muted mr-3\"}>{\"Comments: \"+ num_comments}</small>\r\n                <small className={\"text-muted mr-3\"}>{\"Score: \"+ score}</small>\r\n                <small className={\"text-muted mr-3\"}>{new Date(created*1000).toUTCString()}</small>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Reddit","import React from \"react\";\r\nimport Reddit from \"./Reddit\";\r\n\r\nconst ResultsList = (props) => {\r\n\r\n\r\n    return <div className=\"card-columns\">\r\n        {props.reddits.map((reddit) => {\r\n                const {data} = reddit\r\n                return <Reddit\r\n                    key={data.id}\r\n                    data={data}\r\n                />\r\n            }\r\n        )}\r\n    </div>\r\n\r\n\r\n}\r\n\r\nexport default ResultsList","import React from \"react\";\r\n\r\nconst Spinner = () =>\r\n    <div className=\"d-flex justify-content-center\">\r\n        <div className=\"spinner-border text-primary m-3\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </div>\r\n    </div>\r\n\r\nexport default Spinner","import React from \"react\";\r\n\r\nconst Pagination = (props) => {\r\n    const category = props.data.children[0].data.subreddit;\r\n    const limit = props.data.dist;\r\n    const before = props.data.before;\r\n    const after = props.data.after;\r\n    console.log(before, after)\r\n\r\n\r\n    const changePage = (event) => {\r\n        event.preventDefault();\r\n        props.paginationHandler(event.target.href, event.target.innerText)\r\n    }\r\n\r\n\r\n    return <nav aria-label=\"Page navigation\" className={\"align-self-center\"}>\r\n        <ul className=\"pagination mb-0\">\r\n            <li className={\"page-item \" +( before ? \"\" : \"disabled\")}>\r\n                <a\r\n                    onClick={changePage}\r\n                    className=\"page-link\"\r\n                    href={`https://www.reddit.com/r/${category}.json?limit=${limit}&before=${before}&count=${props.count}`}\r\n                    aria-label=\"Previous\">\r\n                        Previous\r\n                </a>\r\n            </li>\r\n            <li className={\"page-item \" +( after ? \"\" : \"disabled\")}>\r\n                <a\r\n                    onClick={changePage}\r\n                    className=\"page-link\"\r\n                    href={`https://www.reddit.com//r/${category}.json?limit=${limit}&after=${after}&count=${props.count}`}\r\n                    aria-label=\"Next\">\r\n                        Next\r\n                </a>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n}\r\n\r\nexport default Pagination","import React, {useEffect, useState} from \"react\";\r\nimport SearchForm from \"./SearchForm\";\r\nimport ResultsList from \"./ResultsList\";\r\nimport Spinner from \"./Spinner\";\r\nimport Pagination from \"./Pagination\";\r\n\r\nconst fetchReddit = async (category, limit) => {\r\n    const request = `https://www.reddit.com/r/${category}.json?limit=${limit}&dist=${limit}`;\r\n    const response = await fetch(request);\r\n   return await response.json();\r\n};\r\n\r\nconst TextOrSpinner = ({text}) => {\r\n    return text ? <h4>{text}</h4> : <Spinner/>\r\n}\r\n\r\nconst initialData = {\r\n    category: \"react\",\r\n    limit: 10,\r\n};\r\n\r\nconst SearchReddit = () => {\r\n\r\n    const [response, setResponse] = React.useState({});\r\n    const [error, setError] = useState(null);\r\n    const [count, setCount] = useState(1)\r\n    const search  = async ({category, limit}) => {\r\n        try {\r\n            await setError(null);\r\n            await setResponse({});\r\n            await setCount(0)\r\n            if (!category) {\r\n                throw ({message: \"Type some category\"})\r\n            }\r\n\r\n            const resp = await fetchReddit(category, limit);\r\n            setResponse(resp);\r\n        }\r\n        catch (e) {\r\n            setError (e)\r\n        }\r\n    }\r\n\r\n    const loadResults = async ({category, limit})=> {\r\n        const resp = await fetchReddit(category, limit);\r\n        if (resp.data) {\r\n            setResponse(resp);\r\n\r\n        } else (\r\n            setError(resp)\r\n        )\r\n    }\r\n\r\n    const goToAnotherPage = async (request, text) => {\r\n        try {\r\n            const resp = await fetch(request);\r\n            const data = await resp.json();\r\n            const {dist} = response.data;\r\n            await setResponse(data);\r\n            if (text === \"Next\") {\r\n                setCount(count => +count + dist)\r\n            }\r\n            if (text === \"Previous\") {\r\n                setCount(count => +count - dist)\r\n            }\r\n        }\r\n        catch (e) {\r\n            setError (e)\r\n        }\r\n    }\r\n\r\n    React.useEffect(  () => {\r\n        loadResults(initialData)\r\n\r\n    }, []);\r\n\r\n    return <>\r\n        <h1>Search reddit feeds</h1>\r\n        <div className=\"d-flex justify-content-between mr-2\">\r\n            <SearchForm\r\n                submitHandler ={search}\r\n                initialValue = {initialData}\r\n            />\r\n            {response.data && <Pagination paginationHandler={goToAnotherPage} data={response.data} count={count}/>}\r\n        </div>\r\n        {Object.keys(response).length > 0 ?\r\n            <ResultsList\r\n                reddits = {response.data.children}\r\n            />\r\n            :\r\n            <TextOrSpinner text = {error ? error.message : \"\"}/>\r\n        }\r\n\r\n    </>\r\n}\r\n\r\nexport default SearchReddit","import React from \"react\";\r\n\r\nconst FeedItem = (props) => {\r\n    const {thumbnail, created, num_comments, author, score, title, body} = props.data;\r\n    return (\r\n        <div className={\"card my-3\"}>\r\n            <div className=\"card-header\">\r\n                {thumbnail && thumbnail !== \"self\" &&\r\n                <img\r\n                    className={\"img-thumbnail flex-shrink-0 mr-3\"}\r\n                    src ={thumbnail}\r\n                />}\r\n                {author}\r\n            </div>\r\n            <div className=\"card-body\">\r\n                {title && <h5 className=\"card-title\">{title}</h5>}\r\n                {body && <p>{body}</p>}\r\n            </div>\r\n            <div className=\"card-footer\">\r\n                {num_comments && <small className={\"text-muted mr-3\"}>{\"Comments: \" + num_comments}</small>}\r\n                <small className={\"text-muted mr-3\"}>{\"Score: \"+ score}</small>\r\n                <small className={\"text-muted mr-3\"}>{new Date(created*1000).toUTCString()}</small>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FeedItem","import React from \"react\";\r\nimport {useRouteMatch} from \"react-router-dom\";\r\nimport Spinner from \"./Spinner\";\r\nimport FeedItem from \"./FeedItem\";\r\n\r\n\r\nconst fetchFeed = async (url) => {\r\n    const response = await fetch(`https://www.reddit.com${url}.json`);\r\n    const json = await response.json();\r\n    return json;\r\n};\r\n\r\nconst CommentsList = (props) => {\r\n    return Array.isArray(props.comments) ?\r\n        props.comments.map(feed =>\r\n            <FeedItem key={feed.data.id} data={feed.data}/>)\r\n: null\r\n}\r\n\r\nconst Feed =  () => {\r\n    const [data, setData] = React.useState([]);\r\n    let { url } = useRouteMatch();\r\n    const getFeed = async ()=> {\r\n        const feed = await fetchFeed(url);\r\n        console.log(feed);\r\n        setData (feed)\r\n    }\r\n    React.useEffect(() => {\r\n        getFeed()\r\n    }, [])\r\n\r\n    // console.log(data)\r\n    return <>\r\n        <h2>{\"User with id \"}</h2>\r\n        {(data.length && Array.isArray(data)) ?\r\n            data.map((item, index) =>\r\n                <div key = {index}>\r\n                    <CommentsList comments = {item.data.children}/>\r\n                </div>) :\r\n            <Spinner/>}\r\n    </>\r\n}\r\n\r\nexport default Feed","import React from 'react';\nimport {BrowserRouter as Router, Route, Switch, Link, Redirect, useRouteMatch, useHistory, useParams} from \"react-router-dom\"\nimport './App.css';\nimport SearchReddit from \"./SearchReddit\";\nimport Feed from \"./Feed\";\n\nfunction HomeButton() {\n  let history = useHistory();\n  function handleClick() {\n    history.push(\"/home\");\n  }\n  return (\n      <button type=\"button\" onClick={handleClick}>\n        Go home\n      </button>\n  );\n}\nconst NotFound = () => {\n  return <div>Page not found</div>\n}\n\nfunction App() {\n  return (\n  <Router>\n    <div>\n<Link to=\"/\">Home</Link>\n\n      <Switch>\n        <Route exact path=\"/\">\n          <SearchReddit />\n        </Route>\n        <Route path='/r/:subreddit/comments/:id/:name'>\n          <Feed />\n        </Route>\n        <Redirect from=\"/home\" to=\"/\" />\n        <Route>\n          <NotFound />\n        </Route>\n      </Switch>\n    </div>\n  </Router>\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}